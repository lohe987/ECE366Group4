Disassembling Machine Code from Program 1...
 
Init R0, 1         // R0 = 1
Init R1, 1         // R1 = 1
Init R3, 0         // R3 = 0
Load R2, (R3)         // R2 <- M[R3] 
Add R0, R0         // R0 = R0 + R0
Add R0, R1         // R0 = R0 + R1
Add R0, R0         // R0 = R0 + R0
Init R1, 0         // R1 = 0
SltR1 R3, R2         // if R3 < R2, R1 = 1 
bezR1 12         // if R1 ==0: PC = PC + 12 | else: PC++ 
Init R1, 1         // R1 = 1
Add R3, R1         // R3 = R3 + R1
Add R0, R0         // R0 = R0 + R0
Init R1, 1         // R1 = 1
Add R1, R1         // R1 = R1 + R1
Add R1, R1         // R1 = R1 + R1
Store R0, (R1)         // M[R1] <- R0
Load R1, (R1)         // R1 <- M[R1] 
Add R0, R1         // R0 = R0 + R1
Add R0, R0         // R0 = R0 + R0
Jump 14         // PC = PC - 14
Init R3, 0         // R3 = 0
Store R0, (R3)         // M[R3] <- R0
Init R1, 1         // R1 = 1
Add R3, R1         // R3 = R3 + R1
Init R2, 1         // R2 = 1
ShiftL               // R2 << 
ShiftL               // R2 << 
ShiftL               // R2 << 
ShiftL               // R2 << 
Add R2, R1         // R2 = R2 + R1
Store R2, (R3)         // M[R3] <- R2
ShiftL               // R2 << 
SltR1 R0, R2         // if R0 < R2, R1 = 1 
bezR1 13         // if R1 ==0: PC = PC + 13 | else: PC++ 
Sub R3, R1         // R3 = R3 - R1
Load R0, (R3)         // R0 <- M[R3] 
Add R3, R1         // R3 = R3 + R1
Load R3, (R3)         // R3 <- M[R3] 
Sub R2, R3         // R2 = R2 - R3
SltR1 R0, R2         // if R0 < R2, R1 = 1 
bezR1 12         // if R1 ==0: PC = PC + 12 | else: PC++ 
Sub R0, R2         // R0 = R0 - R2
Store R0, (R3)         // M[R3] <- R0

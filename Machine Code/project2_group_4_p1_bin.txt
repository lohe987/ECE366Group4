1ST part: Get to 6^p

R0 = 1
R1 = 1
R2 = p
R3 = i = 1
for(R3 = 0, R3 < R2, R3++):
	R0 = R0 + R0 = 2
	R0 = R0 + R1 = 3
	R0 = R0 + R0 = 6

init R0, 1			0 111 0001	R0 = 1
init R1, 1			1 111 0011	R1 = 1
init R3, 0			1 111 0110	R3 = 0
load R2, (R3)			0 010 1011	R2 = M[R3=0] = p
add R0, R0			0 000 0000	R0 = R0 + R0 = 2
add R0, R1			1 000 0001	R0 = R0 + R1 = 3
add R0, R0			0 000 0000	R0 = R0 + R0 = 6

loop:
init R1, 0			0 111 0010	R1 = 0
sltR1 R3, R2			1 110 1110	if R3 < R2, R1 = 1
bezR1 imm			101 ????	if R1 = 0, jump to ???
init R1, 1			1 111 0011	R1 = 1
add R3, R1			1 000 1101	R3 = R3 + R1 = i + 1
add R0, R0			0 000 0000	R0 = R0 + R0 = 12
init R1, 1			1 111 0011	R1 = 1
add R1, R1			0 000 0101	R1 = 2
add R1, R1			0 000 0101	R1 = 4
store R0, (R1)			1 011 0001	R0 = 12 -> M[R1=4]
load  R1, (R1)			1 010 0101	R1 = 12
add R0, R1			1 000 0001	R0 = R0 + R1 = 24
add R0, R0			0 000 0000	R0 = R0 + R0 = 36
jump 14				0 100 1110	PC = PC - 14
 
2nd Part: Mod Calculus

R0 = 6^p
Store the value of 6^p
Set R1 = 1
Set R2 = 1
Shift R2 left until it gets to 16
Then R2 = R2 + R1 = 17
Shift R2 left until R2 > 6^p
While (R2 > 6^p): R2 = R2 - 17
Result = 6^p - R2 = 6^p mod 17	